# 1. 모델링 기법
## 1.1.모델링(Modeling)의 개념
- 모델링은 실세계의 물리현상을 특정한 목적에 대응하여 이용하기 쉬운 형식으로 표현한 기법
## 1.2.모델링의 특정
- 개발된 시스템에 대하여 여러 분야의 엔지니어들이 공통된 개념을 공유하는 데 도움을 준다.
- 개발팀이 응용문제를 이해하는 데 도움을 줄 수 있다
- 절차적인 프로그램을 위한 자료 흐름도는 프로세스 위주의 모델링 방법
## 1.3.모델링 역할
- 실제 문제에 대한 모델링이 소프트웨어 요구사항 분석의 핵심
- 모델은 문제가 문제 도메인의 엔티티(Entiy)들과 관계 및 중속성을 반영
## 2.분석 자동화 도구
### 2.1 분석 자동화 도구의 개념
- 분석 자동화 도구는 요구사항을 자동으로 분석하고, 요구사항 분석 명세서를 기술하도록 개발된 요구사항 분석을 위한 자동화 도구
### 2.2 분석 자동화 도구의 등장 배경
- 산업 측명
  - 소프트웨어 위기의 극복 대응 방안으로 대두
- 관리 측명
  - 사용자의 요구사항과 실제 시스템 간의 차이 발생 극복 필요
  - 시스템의 재사용성, 생선성 및 유지보수의 어려움 극복 필요
### 2.3 분석 자동화 도구의 특징
- 표준화 적용과 문서화를 통한 보고를 통해 품질 개선이 가능
- 변경사항과 변경으로 인한 영향에 대한 추적이 쉽다
- 명세에 대한 유지보수 비용의 축소가 가능
- 자동화된 기법을 통해 소프트웨어 품질이 향상
- 소프트웨어 모듈의 재사용성이 향상되고, 유지보수가 용이
- 원천 기술로는 구조적 기법, 프로토타이핑 기술, 자동화 프로그래밍, 정보 저장소 기술, 분산처리 기술이 사용
### 2.4 분석 자동화 도구 분류
- 상위 Case
  - 계획수립, 요구분석, 기본설계 단계를 다이어그램으로 표현
  - 모델들 사잉의 모순 검삼 및 모델의 오류 검증, 일관성 검증 지원
  - 자료흐름도 프로토타이핑 작성 지원 및 UI 설계 지원
- 하위 Case
  - 구문 중심 편집 및 정적, 동적 테스트 지원
  - 시스템 명세서 생성 및 소스 코드 생성 지원
### 2.5 분석 자동화 도구 중요 기능(Case)
- 그래픽을 지원
- 소프트웨어 생명주기의 전 단계를 연결
- 다양한 소프트웨어 개발 모형을 지원
- 표준화된 개발 환경 구축 및 문서 자동화 기능을 제공
- 작업 과정 및 데이터 공유를 통해 작업자 간의 커뮤니케이션을 중대
## 3.요구사항 관리 도구
### 3.1 요구사항 관리 도구의 개념
- 요구사항 관리 도구는 요구사항을 기반으로 프로젝트 관리, 설계, 개발, 테스트 등을 수행할 수 있는 역할을 지원하는 도구
### 3.2 요구사항 관리 도구의 필요성
- **비용편익**: 요구사항 변경으로 인한 비용 편익 분석
- **변경 추적**: 요구사항 변경의 추적
- **영향 평가**: 요구사항 변경에 따른 영향 평가
### 3.3 요구사항 관리 도구의 기능
- 기본 기능
  - 프로젝트 생성 
    - 
